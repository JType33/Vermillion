[{"/home/jtype/appIO/authenticate-me/frontend/src/index.js":"1","/home/jtype/appIO/authenticate-me/frontend/src/App.js":"2","/home/jtype/appIO/authenticate-me/frontend/src/store/index.js":"3","/home/jtype/appIO/authenticate-me/frontend/src/store/csrf.js":"4","/home/jtype/appIO/authenticate-me/frontend/src/store/restoreCSRF.js":"5"},{"size":729,"mtime":1608392684908,"results":"6","hashOfConfig":"7"},{"size":84,"mtime":1608390386421,"results":"8","hashOfConfig":"7"},{"size":561,"mtime":1608391241991,"results":"9","hashOfConfig":"7"},{"size":649,"mtime":1608391725210,"results":"10","hashOfConfig":"7"},{"size":102,"mtime":1608392519550,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tf640f",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},"/home/jtype/appIO/authenticate-me/frontend/src/index.js",[],"/home/jtype/appIO/authenticate-me/frontend/src/App.js",[],["25","26"],"/home/jtype/appIO/authenticate-me/frontend/src/store/index.js",[],"/home/jtype/appIO/authenticate-me/frontend/src/store/csrf.js",["27"],"import Cookies from 'js-cookie';\n\nexport default async function (url, options = {}) {\n  options.method = options.method || 'GET';\n  options.headers = options.headers || {};\n\n  if (options.method.toUpperCase() !== 'GET') {\n    options.headers['Content-Type'] =\n      options.headers['Content-Type'] || 'application/json';\n    options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n  }\n  const res = await window.fetch(url, options);\n\n  const contentType = res.headers.get('content-type');\n\n  if (contentType && contentType.includes('application/json')) {\n    res.data = await res.json();\n  }\n\n  if (res.status >= 400) throw res;\n\n  return res;\n}\n","/home/jtype/appIO/authenticate-me/frontend/src/store/restoreCSRF.js",["28"],"import csrfetch from './csrf';\nexport default function () {\n  return csrfetch('/api/csrf/restore');\n}\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":3,"column":1,"nodeType":"35","endLine":23,"endColumn":2},{"ruleId":"33","severity":1,"message":"34","line":2,"column":1,"nodeType":"35","endLine":4,"endColumn":2},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]